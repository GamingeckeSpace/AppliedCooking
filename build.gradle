buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

plugins {
    id 'eclipse'
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url 'https://maven.blamejared.com'
    }

    maven {
        url "https://maven.pkg.github.com/AppliedEnergistics/Applied-Energistics-2"
        credentials {
            username project.findProperty("gpr.user") ?: System.getenv("GPR_USERNAME")
            password project.findProperty("gpr.key") ?: System.getenv("GPR_TOKEN")
        }
    }
}

version = '2.0.3'
def env = System.getenv()
if (env.BUILD_NUMBER) {
    version = version + "+" + "${env.BUILD_NUMBER}"
}
group = 'dev.smolinacadena'
archivesBaseName = 'appliedcooking'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'appliedcooking'
            mods {
                appliedcooking {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'appliedcooking'
            mods {
                appliedcooking {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'appliedcooking'
            mods {
                appliedcooking {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'appliedcooking', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods {
                appliedcooking {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.1.25'

    implementation fg.deobf("curse.maven:balm-531761:3914527")
    implementation fg.deobf("appeng:appliedenergistics2:12.7.0")
    implementation fg.deobf('curse.maven:cooking-for-blockheads-231484:4055331')

    implementation fg.deobf("curse.maven:jade-324717:4010505")
    implementation fg.deobf("curse.maven:the-one-probe-245211:3927520")

    runtimeOnly fg.deobf('curse.maven:jei-238222:4030307')
    runtimeOnly fg.deobf('curse.maven:nbt-tool-451553:3879898')

    runtimeOnly fg.deobf("curse.maven:aquaculture-60028:3990680")
    runtimeOnly fg.deobf("curse.maven:farmers-delight-398521:3999157")
    runtimeOnly fg.deobf("curse.maven:croptopia-415438:3947784")

    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-77")
    runtimeOnly fg.deobf('curse.maven:sebastrnlib-709936:4105906')
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "appliedcooking",
                "Specification-Vendor"    : "smolinacadena",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "smolinacadena",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
